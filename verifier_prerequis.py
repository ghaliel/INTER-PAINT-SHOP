#!/usr/bin/env python
"""
Script de v√©rification des pr√©requis pour PaintShop Portable
"""
import os
import sys
import platform
import psutil
import subprocess
from pathlib import Path

def verifier_systeme():
    """V√©rifie les pr√©requis syst√®me"""
    
    print("üîç V√©rification des pr√©requis syst√®me...")
    print("=" * 50)
    
    # V√©rifier le syst√®me d'exploitation
    systeme = platform.system()
    version = platform.version()
    architecture = platform.architecture()[0]
    
    print(f"üñ•Ô∏è  Syst√®me d'exploitation: {systeme} {version}")
    print(f"üèóÔ∏è  Architecture: {architecture}")
    
    if systeme != "Windows":
        print("‚ùå ERREUR: Windows requis")
        return False
    
    # V√©rifier la version de Windows
    try:
        import winreg
        key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows NT\CurrentVersion")
        version_windows = winreg.QueryValueEx(key, "CurrentVersion")[0]
        build = winreg.QueryValueEx(key, "CurrentBuild")[0]
        print(f"üìã Version Windows: {version_windows} (Build {build})")
        
        if float(version_windows) < 10.0:
            print("‚ö†Ô∏è  ATTENTION: Windows 10 ou plus r√©cent recommand√©")
    except:
        print("‚ÑπÔ∏è  Version Windows: Non d√©tect√©e")
    
    # V√©rifier la RAM
    ram_gb = psutil.virtual_memory().total / (1024**3)
    print(f"üíæ RAM: {ram_gb:.1f} GB")
    
    if ram_gb < 4:
        print("‚ùå ERREUR: Minimum 4 GB RAM requis")
        return False
    elif ram_gb < 8:
        print("‚ö†Ô∏è  ATTENTION: 8 GB RAM recommand√©s")
    
    # V√©rifier l'espace disque
    disque = psutil.disk_usage('.')
    espace_gb = disque.free / (1024**3)
    print(f"üíø Espace disque libre: {espace_gb:.1f} GB")
    
    if espace_gb < 0.2:
        print("‚ùå ERREUR: Minimum 200 MB d'espace libre requis")
        return False
    elif espace_gb < 0.5:
        print("‚ö†Ô∏è  ATTENTION: 500 MB d'espace libre recommand√©s")
    
    return True

def verifier_fichiers():
    """V√©rifie la pr√©sence des fichiers n√©cessaires"""
    
    print("\nüìÅ V√©rification des fichiers...")
    
    fichiers_requis = [
        "PaintShop_Portable.exe",
        "Lancer_PaintShop.bat",
        "README.txt",
        "db.sqlite3"
    ]
    
    dossiers_requis = [
        "static",
        "media"
    ]
    
    fichiers_manquants = []
    
    for fichier in fichiers_requis:
        if Path(fichier).exists():
            taille = Path(fichier).stat().st_size / (1024**2)
            print(f"‚úÖ {fichier} ({taille:.1f} MB)")
        else:
            print(f"‚ùå {fichier} - MANQUANT")
            fichiers_manquants.append(fichier)
    
    for dossier in dossiers_requis:
        if Path(dossier).exists():
            print(f"‚úÖ {dossier}/")
        else:
            print(f"‚ö†Ô∏è  {dossier}/ - Optionnel")
    
    if fichiers_manquants:
        print(f"\n‚ùå Fichiers manquants: {', '.join(fichiers_manquants)}")
        return False
    
    return True

def verifier_reseau():
    """V√©rifie la configuration r√©seau"""
    
    print("\nüåê V√©rification r√©seau...")
    
    # V√©rifier le port 8000
    try:
        import socket
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        result = sock.connect_ex(('127.0.0.1', 8000))
        sock.close()
        
        if result == 0:
            print("‚ö†Ô∏è  Port 8000 d√©j√† utilis√©")
            print("üí° Solution: Utilisez un autre port (ex: 8080)")
        else:
            print("‚úÖ Port 8000 disponible")
    except:
        print("‚ÑπÔ∏è  V√©rification du port: Impossible")
    
    return True

def verifier_navigateur():
    """V√©rifie la pr√©sence d'un navigateur"""
    
    print("\nüåç V√©rification navigateur...")
    
    navigateurs = [
        r"C:\Program Files\Google\Chrome\Application\chrome.exe",
        r"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe",
        r"C:\Program Files\Mozilla Firefox\firefox.exe",
        r"C:\Program Files (x86)\Mozilla Firefox\firefox.exe",
        r"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe",
        r"C:\Program Files\Microsoft\Edge\Application\msedge.exe"
    ]
    
    navigateur_trouve = False
    
    for navigateur in navigateurs:
        if Path(navigateur).exists():
            print(f"‚úÖ Navigateur trouv√©: {Path(navigateur).name}")
            navigateur_trouve = True
            break
    
    if not navigateur_trouve:
        print("‚ö†Ô∏è  Aucun navigateur d√©tect√©")
        print("üí° Installez Chrome, Firefox ou Edge")
    
    return navigateur_trouve

def verifier_antivirus():
    """V√©rifie les param√®tres antivirus"""
    
    print("\nüõ°Ô∏è  V√©rification antivirus...")
    
    # V√©rifier si Windows Defender est actif
    try:
        result = subprocess.run(['powershell', 'Get-MpComputerStatus'], 
                              capture_output=True, text=True, timeout=10)
        if 'RealTimeProtectionEnabled : True' in result.stdout:
            print("‚ö†Ô∏è  Windows Defender actif")
            print("üí° Ajoutez le dossier √† la liste blanche si n√©cessaire")
        else:
            print("‚úÖ Windows Defender: Non d√©tect√© ou d√©sactiv√©")
    except:
        print("‚ÑπÔ∏è  V√©rification antivirus: Impossible")
    
    return True

def main():
    """Fonction principale"""
    
    print("üé® PaintShop - V√©rification des pr√©requis")
    print("=" * 50)
    
    # V√©rifications
    systeme_ok = verifier_systeme()
    fichiers_ok = verifier_fichiers()
    reseau_ok = verifier_reseau()
    navigateur_ok = verifier_navigateur()
    antivirus_ok = verifier_antivirus()
    
    # R√©sum√©
    print("\n" + "=" * 50)
    print("üìä R√âSUM√â DES V√âRIFICATIONS")
    print("=" * 50)
    
    if systeme_ok:
        print("‚úÖ Syst√®me: Compatible")
    else:
        print("‚ùå Syst√®me: Incompatible")
    
    if fichiers_ok:
        print("‚úÖ Fichiers: Complets")
    else:
        print("‚ùå Fichiers: Incomplets")
    
    if reseau_ok:
        print("‚úÖ R√©seau: OK")
    else:
        print("‚ùå R√©seau: Probl√®me")
    
    if navigateur_ok:
        print("‚úÖ Navigateur: Trouv√©")
    else:
        print("‚ö†Ô∏è  Navigateur: Non trouv√©")
    
    if antivirus_ok:
        print("‚úÖ Antivirus: V√©rifi√©")
    else:
        print("‚ö†Ô∏è  Antivirus: Non v√©rifi√©")
    
    # Conclusion
    print("\n" + "=" * 50)
    if systeme_ok and fichiers_ok:
        print("üéâ PR√äT √Ä LANCER !")
        print("üí° Double-cliquez sur PaintShop_Portable.exe")
        print("üåê Ouvrez http://127.0.0.1:8000 dans votre navigateur")
    else:
        print("‚ùå PROBL√àMES D√âTECT√âS")
        print("üîß Corrigez les erreurs avant de lancer l'application")
    
    print("=" * 50)

if __name__ == "__main__":
    main() 